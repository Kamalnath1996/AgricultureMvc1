@model AgricultureMvc1.Models.User
    @{ 
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
@if (TempData["message"] != null)
{
    <script>
        alert('@TempData["message"]');
    </script>
}
<div class="breadcrumb-area mb-10">
    <div class="container">
        <div class="row">
            <div class="col">
                <div class="breadcrumb-container">
                    <ul>
                        <li><a href="/Home/Index"><i class="fa fa-home"></i> Home</a></li>
                        <li class="active">My Account</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="my-account-section section position-relative mb-10 fix">
    <div class="container">
        <div class="row">
            <div class="col-12">
                <div class="row">
                    <div class="col-lg-3 col-12">
                        <div class="myaccount-tab-menu nav" role="tablist">
                            @if (Request.QueryString["name"] == "Account_Details")
                            {
                                <a href="#payment-method" class="active" data-toggle="tab"><i class="fa fa-credit-card"></i> Account Details</a>
                            }
                            else
                            {
                                <a href="#payment-method" data-toggle="tab"><i class="fa fa-credit-card"></i> Account Details</a>
                            }
                        </div>
                    </div>
                    <div class="col-lg-9 col-12">
                        <div class="tab-content active" id="myaccountContent">
                            <div class="tab-pane fade active" id="payment-method" role="tabpanel">
                                <div class="myaccount-content">
                                    <h3>Account Details</h3>
                                    <div class="account-details-form">
                                        @using (Html.BeginForm("UpdateRegister", "Home", FormMethod.Post, new { @class = "form-horizontal", @enctype = "multipart/form-data" }))
                                        {
                                            <div class="row">
                                                <div class="col-lg-6 col-12 mb-30">
                                                    <label>First Name</label>
                                                    @Html.TextBoxFor(a => a.firstName, new { placeholder = "Your First Name", Type = "text" })
                                                </div>
                                                <div class="col-lg-6 col-12 mb-30">
                                                    <label>Last Name</label>
                                                    @Html.TextBoxFor(a => a.lastName, new { placeholder = "Your Last Name", Type = "text" })
                                                </div>
                                                <div class="col-lg-6 col-12 mb-30">
                                                    <label>Email</label>
                                                    @Html.TextBoxFor(a => a.email, new { placeholder = "example@example.com", autocomplete = "off", Type = "email" })
                                                </div>
                                                <div class="col-lg-6 col-12 mb-30">
                                                    <label>State</label>
                                                    @Html.TextBoxFor(a => a.State, new { placeholder = "Your State", Type = "text" })
                                                </div>
                                                <div class="col-lg-6 col-12 mb-30">
                                                    <label>City</label>
                                                    @Html.TextBoxFor(a => a.City, new { placeholder = "Your City", Type = "text" })
                                                </div>
                                                <div class="col-lg-6 col-12 mb-30">
                                                    <label>Locality</label>
                                                    @Html.TextBoxFor(a => a.Locality, new { placeholder = "Your Locality with Mobile Number", Type = "text" })
                                                </div>
                                                <div class="col-12">
                                                    <button type="submit" value="Update" class="save-change-btn">Save Changes</button>
                                                    <a href="/Home/Index" class="save-change-btn">Cancel</a>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="myModal" role="dialog" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Google Map</h4>
            </div>
            <div class="modal-body">
                <label style="color:red">Please Select Porper Location, This location is used as your Current location</label>
                <div id="map" style="width:100%;height:400px"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" onclick="javascript: close_modal();" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>

@section script{

    <script>
        $('#addressBook').on('submit', function (e) {
            $(this).find('.required').each(function () {
                if ($(this).val() == "" || $(this).val() == "0") {
                    e.preventDefault();
                    $(this).attr('style', 'border-color: red');
                }
                else {
                    $(this).removeAttr('style', 'border-color: red');
                }
            });
        });
    </script>
    <script>
        function addmoney() {
            var amount = $('#txtamount').val();
            if (amount != '') {
                location.href = '/checkout/addMoney?amount=' + amount + '';
            } else {
                $('#txtamount').attr('style', 'border-color:red');
            }
        }
    </script>
    <script>
        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#imgUser').attr('src', e.target.result);
                }

                reader.readAsDataURL(input.files[0]);
            }
        }

        $("#imgInp").change(function () {
            readURL(this);
        });
    </script>
    @if (Request.QueryString["name"] == "show_map" || Request.QueryString["name"] == "new_address")
    {
        if (Request.QueryString["name"] == "show_map")
        {

            <script>
                var showModal = "";
                showModal = "show_map";
            </script>
        }
        else if (Request.QueryString["name"] == "new_address")
        {
            <script>
                var showModal = "";
                showModal = "new_address";
            </script>
        }
        <script async defer
                src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCAsZdt9P1T6_ZLWxTSPO6oz6jlawV5jYg&callback=myMap&libraries=geometry">
        </script>
        <script>
        var marker;
        var geocoder;
        var myCenter;
        function myMap() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(successFunction, errorFunction);
            } else {
                alert('It seems like Geolocation, which is required for this page, is not enabled in your browser. Please use a browser which supports it.');
            }
            function successFunction(position) {
                var lat = position.coords.latitude;
                var long = position.coords.longitude;

                $('#Lattitude').val(lat);
                $('#Longitude').val(long);
                setValues();
            }
            function errorFunction(position) {

                $('#Lattitude').val('0');
                $('#Longitude').val('0');
                setValues();
            }

            function setValues() {
                geocoder = new google.maps.Geocoder();
                myCenter = new google.maps.LatLng($('#Lattitude').val(), $('#Longitude').val());
                var mapCanvas = document.getElementById("map");
                var mapOptions = { center: myCenter, zoom: 12 };
                var map = new google.maps.Map(mapCanvas, mapOptions);
                marker = new google.maps.Marker({ position: myCenter, draggable: true });
                marker.setMap(map);
                addYourLocationButton(map, marker);
                if (showModal == "show_map") {
                    $('#myModal').modal('show');

                }
                if (showModal == "new_address") {
                    close_modal();
                }
            }
        }
        function close_modal() {
            myCenter = new google.maps.LatLng(marker.getPosition().lat(), marker.getPosition().lng());
            geocoder.geocode({ 'latLng': myCenter }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    for (var i = 0; i < results.length; i++) {
                        if (results[i].address_components.length>3) {
                            var address = (results[i].address_components);
                            var addLen = address.length;
                            document.getElementById('entry_postcode').value = address[addLen - 1].long_name;
                            document.getElementById('entry_state').value = address[addLen - 3].long_name;
                            document.getElementById('entry_city').value = address[addLen - 4].long_name;
                            for (var i = 0; i<=addLen-5; i++) {
                                
                                 document.getElementById('StreetAddress').value += address[i].long_name+",";
                            }
                            break;
                        //infowindow.setContent(results[1].formatted_address);
                        //infowindow.open(map, marker);


                        } else {
                            alert("No results found");
                        }
                    }
                } else {
                    alert("Geocoder failed due to: " + status);
                }
            });
            $('#Lattitude').val(marker.getPosition().lat());
            $('#Longitude').val(marker.getPosition().lng());
            }
             function addYourLocationButton(map, marker) 
        {
    var controlDiv = document.createElement('div');

    var firstChild = document.createElement('button');
    firstChild.style.backgroundColor = '#fff';
    firstChild.style.border = 'none';
    firstChild.style.outline = 'none';
    firstChild.style.width = '40px';
    firstChild.style.height = '40px';
    firstChild.style.borderRadius = '2px';
    firstChild.style.boxShadow = '0 1px 4px rgba(0,0,0,0.3)';
    firstChild.style.cursor = 'pointer';
    firstChild.style.marginRight = '10px';
    firstChild.style.padding = '0px';
    firstChild.title = 'Your Location';
    controlDiv.appendChild(firstChild);

    var secondChild = document.createElement('div');
    secondChild.style.margin = '10px';
    secondChild.style.width = '18px';
    secondChild.style.height = '18px';
    secondChild.style.backgroundImage = 'url(https://maps.gstatic.com/tactile/mylocation/mylocation-sprite-1x.png)';
    secondChild.style.backgroundSize = '180px 18px';
    secondChild.style.backgroundPosition = '0px 0px';
    secondChild.style.backgroundRepeat = 'no-repeat';
    secondChild.id = 'you_location_img';
    firstChild.appendChild(secondChild);

    google.maps.event.addListener(map, 'dragend', function() {
        $('#you_location_img').css('background-position', '0px 0px');
    });

    firstChild.addEventListener('click', function() {
        var imgX = '0';
        var animationInterval = setInterval(function(){
            if(imgX == '-18') imgX = '0';
            else imgX = '-18';
            $('#you_location_img').css('background-position', imgX+'px 0px');
        }, 500);
        if(navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function(position) {
                var latlng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
                marker.setPosition(latlng);
                map.setCenter(latlng);
                clearInterval(animationInterval);
                $('#you_location_img').css('background-position', '-144px 0px');
            });
        }
        else{
            clearInterval(animationInterval);
            $('#you_location_img').css('background-position', '0px 0px');
        }
    });

    controlDiv.index = 1;
    map.controls[google.maps.ControlPosition.RIGHT_BOTTOM].push(controlDiv);
}

        </script>
    }
}

